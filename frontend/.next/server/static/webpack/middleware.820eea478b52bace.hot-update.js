"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./auth.config.ts":
/*!************************!*\
  !*** ./auth.config.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authConfig: () => (/* binding */ authConfig)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(middleware)/../node_modules/next-auth/providers/credentials.js\");\n\nconst authConfig = {\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            name: \"Credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                try {\n                    // Replace this with your actual authentication logic\n                    // For example, calling your API to validate credentials\n                    const res = await fetch(`${process.env.NEXTAUTH_URL}/api/auth/login`, {\n                        method: \"POST\",\n                        body: JSON.stringify(credentials),\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        }\n                    });\n                    const user = await res.json();\n                    if (res.ok && user) {\n                        return user;\n                    }\n                    return null;\n                } catch (error) {\n                    console.error(\"Authorization error:\", error);\n                    return null;\n                }\n            }\n        })\n    ],\n    pages: {\n        signIn: \"/login\",\n        signOut: \"/login\",\n        error: \"/login\"\n    },\n    callbacks: {\n        async authorized ({ auth, request: { nextUrl } }) {\n            const isLoggedIn = !!auth?.user;\n            const isOnDashboard = nextUrl.pathname.startsWith(\"/dashboard\");\n            const isAuthPage = [\n                \"/login\",\n                \"/register\"\n            ].includes(nextUrl.pathname);\n            if (isAuthPage) {\n                if (isLoggedIn) {\n                    return Response.redirect(new URL(\"/dashboard\", nextUrl));\n                }\n                return true;\n            }\n            if (isOnDashboard) {\n                return isLoggedIn; // Redirect unauthenticated users to login page\n            }\n            return true; // Allow access to other pages\n        },\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.role = user.role;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (session?.user) {\n                session.user.id = token.id;\n                session.user.role = token.role;\n            }\n            return session;\n        }\n    },\n    debug: \"development\" === \"development\",\n    session: {\n        strategy: \"jwt\",\n        maxAge: 30 * 24 * 60 * 60,\n        updateAge: 24 * 60 * 60\n    },\n    secret: process.env.NEXTAUTH_SECRET,\n    // Add error handling for authentication\n    events: {\n        async error (error) {\n            console.error(\"Authentication error:\", error);\n        }\n    },\n    // Configure the OpenID client\n    openid: {\n        client: {\n            httpOptions: {\n                timeout: 10000\n            }\n        }\n    },\n    // Add additional security settings\n    cookies: {\n        sessionToken: {\n            name: `__Secure-next-auth.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: \"development\" === \"production\"\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QztZQUN4Q3lELFNBQVM7Z0JBQ1BDLFVBQVU7Z0JBQ1ZDLFVBQVU7Z0JBQ1ZDLE1BQU07Z0JBQ05DLFFBQVFwRCxrQkFBeUI7WUFDbkM7UUFDRjtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hdXRoLmNvbmZpZy50cz80MzA4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBdXRoQ29uZmlnIH0gZnJvbSAnbmV4dC1hdXRoJztcbmltcG9ydCBDcmVkZW50aWFsc1Byb3ZpZGVyIGZyb20gJ25leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHMnO1xuXG5leHBvcnQgY29uc3QgYXV0aENvbmZpZzogTmV4dEF1dGhDb25maWcgPSB7XG4gIHByb3ZpZGVyczogW1xuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xuICAgICAgbmFtZTogJ0NyZWRlbnRpYWxzJyxcbiAgICAgIGNyZWRlbnRpYWxzOiB7XG4gICAgICAgIGVtYWlsOiB7IGxhYmVsOiBcIkVtYWlsXCIsIHR5cGU6IFwiZW1haWxcIiB9LFxuICAgICAgICBwYXNzd29yZDogeyBsYWJlbDogXCJQYXNzd29yZFwiLCB0eXBlOiBcInBhc3N3b3JkXCIgfVxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFJlcGxhY2UgdGhpcyB3aXRoIHlvdXIgYWN0dWFsIGF1dGhlbnRpY2F0aW9uIGxvZ2ljXG4gICAgICAgICAgLy8gRm9yIGV4YW1wbGUsIGNhbGxpbmcgeW91ciBBUEkgdG8gdmFsaWRhdGUgY3JlZGVudGlhbHNcbiAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtwcm9jZXNzLmVudi5ORVhUQVVUSF9VUkx9L2FwaS9hdXRoL2xvZ2luYCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShjcmVkZW50aWFscyksXG4gICAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCByZXMuanNvbigpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChyZXMub2sgJiYgdXNlcikge1xuICAgICAgICAgICAgcmV0dXJuIHVzZXI7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0F1dGhvcml6YXRpb24gZXJyb3I6JywgZXJyb3IpO1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgXSxcbiAgcGFnZXM6IHtcbiAgICBzaWduSW46ICcvbG9naW4nLFxuICAgIHNpZ25PdXQ6ICcvbG9naW4nLFxuICAgIGVycm9yOiAnL2xvZ2luJyxcbiAgfSxcbiAgY2FsbGJhY2tzOiB7XG4gICAgYXN5bmMgYXV0aG9yaXplZCh7IGF1dGgsIHJlcXVlc3Q6IHsgbmV4dFVybCB9IH0pIHtcbiAgICAgIGNvbnN0IGlzTG9nZ2VkSW4gPSAhIWF1dGg/LnVzZXI7XG4gICAgICBjb25zdCBpc09uRGFzaGJvYXJkID0gbmV4dFVybC5wYXRobmFtZS5zdGFydHNXaXRoKCcvZGFzaGJvYXJkJyk7XG4gICAgICBjb25zdCBpc0F1dGhQYWdlID0gWycvbG9naW4nLCAnL3JlZ2lzdGVyJ10uaW5jbHVkZXMobmV4dFVybC5wYXRobmFtZSk7XG4gICAgICBcbiAgICAgIGlmIChpc0F1dGhQYWdlKSB7XG4gICAgICAgIGlmIChpc0xvZ2dlZEluKSB7XG4gICAgICAgICAgcmV0dXJuIFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy9kYXNoYm9hcmQnLCBuZXh0VXJsKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmIChpc09uRGFzaGJvYXJkKSB7XG4gICAgICAgIHJldHVybiBpc0xvZ2dlZEluOyAvLyBSZWRpcmVjdCB1bmF1dGhlbnRpY2F0ZWQgdXNlcnMgdG8gbG9naW4gcGFnZVxuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gdHJ1ZTsgLy8gQWxsb3cgYWNjZXNzIHRvIG90aGVyIHBhZ2VzXG4gICAgfSxcbiAgICBhc3luYyBqd3QoeyB0b2tlbiwgdXNlciB9KSB7XG4gICAgICBpZiAodXNlcikge1xuICAgICAgICB0b2tlbi5pZCA9IHVzZXIuaWQ7XG4gICAgICAgIHRva2VuLnJvbGUgPSB1c2VyLnJvbGU7XG4gICAgICB9XG4gICAgICByZXR1cm4gdG9rZW47XG4gICAgfSxcbiAgICBhc3luYyBzZXNzaW9uKHsgc2Vzc2lvbiwgdG9rZW4gfSkge1xuICAgICAgaWYgKHNlc3Npb24/LnVzZXIpIHtcbiAgICAgICAgc2Vzc2lvbi51c2VyLmlkID0gdG9rZW4uaWQgYXMgc3RyaW5nO1xuICAgICAgICBzZXNzaW9uLnVzZXIucm9sZSA9IHRva2VuLnJvbGUgYXMgc3RyaW5nO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHNlc3Npb247XG4gICAgfSxcbiAgfSxcbiAgZGVidWc6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnLFxuICBzZXNzaW9uOiB7XG4gICAgc3RyYXRlZ3k6ICdqd3QnLFxuICAgIG1heEFnZTogMzAgKiAyNCAqIDYwICogNjAsIC8vIDMwIGRheXNcbiAgICB1cGRhdGVBZ2U6IDI0ICogNjAgKiA2MCwgLy8gMjQgaG91cnNcbiAgfSxcbiAgc2VjcmV0OiBwcm9jZXNzLmVudi5ORVhUQVVUSF9TRUNSRVQsXG4gIC8vIEFkZCBlcnJvciBoYW5kbGluZyBmb3IgYXV0aGVudGljYXRpb25cbiAgZXZlbnRzOiB7XG4gICAgYXN5bmMgZXJyb3IoZXJyb3I6IEVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdBdXRoZW50aWNhdGlvbiBlcnJvcjonLCBlcnJvcik7XG4gICAgfSxcbiAgfSxcbiAgLy8gQ29uZmlndXJlIHRoZSBPcGVuSUQgY2xpZW50XG4gIG9wZW5pZDoge1xuICAgIGNsaWVudDoge1xuICAgICAgaHR0cE9wdGlvbnM6IHtcbiAgICAgICAgdGltZW91dDogMTAwMDAsIC8vIDEwIHNlY29uZHNcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgLy8gQWRkIGFkZGl0aW9uYWwgc2VjdXJpdHkgc2V0dGluZ3NcbiAgY29va2llczoge1xuICAgIHNlc3Npb25Ub2tlbjoge1xuICAgICAgbmFtZTogYF9fU2VjdXJlLW5leHQtYXV0aC5zZXNzaW9uLXRva2VuYCxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgaHR0cE9ubHk6IHRydWUsXG4gICAgICAgIHNhbWVTaXRlOiAnbGF4JyxcbiAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICBzZWN1cmU6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG59O1xuIl0sIm5hbWVzIjpbIkNyZWRlbnRpYWxzUHJvdmlkZXIiLCJhdXRoQ29uZmlnIiwicHJvdmlkZXJzIiwibmFtZSIsImNyZWRlbnRpYWxzIiwiZW1haWwiLCJsYWJlbCIsInR5cGUiLCJwYXNzd29yZCIsImF1dGhvcml6ZSIsInJlcyIsImZldGNoIiwicHJvY2VzcyIsImVudiIsIk5FWFRBVVRIX1VSTCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiaGVhZGVycyIsInVzZXIiLCJqc29uIiwib2siLCJlcnJvciIsImNvbnNvbGUiLCJwYWdlcyIsInNpZ25JbiIsInNpZ25PdXQiLCJjYWxsYmFja3MiLCJhdXRob3JpemVkIiwiYXV0aCIsInJlcXVlc3QiLCJuZXh0VXJsIiwiaXNMb2dnZWRJbiIsImlzT25EYXNoYm9hcmQiLCJwYXRobmFtZSIsInN0YXJ0c1dpdGgiLCJpc0F1dGhQYWdlIiwiaW5jbHVkZXMiLCJSZXNwb25zZSIsInJlZGlyZWN0IiwiVVJMIiwiand0IiwidG9rZW4iLCJpZCIsInJvbGUiLCJzZXNzaW9uIiwiZGVidWciLCJzdHJhdGVneSIsIm1heEFnZSIsInVwZGF0ZUFnZSIsInNlY3JldCIsIk5FWFRBVVRIX1NFQ1JFVCIsImV2ZW50cyIsIm9wZW5pZCIsImNsaWVudCIsImh0dHBPcHRpb25zIiwidGltZW91dCIsImNvb2tpZXMiLCJzZXNzaW9uVG9rZW4iLCJvcHRpb25zIiwiaHR0cE9ubHkiLCJzYW1lU2l0ZSIsInBhdGgiLCJzZWN1cmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./auth.config.ts\n");

/***/ }),

/***/ "(middleware)/../node_modules/next-auth/providers/credentials.js":
/*!**********************************************************!*\
  !*** ../node_modules/next-auth/providers/credentials.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = Credentials;\nfunction Credentials(options) {\n  return {\n    id: \"credentials\",\n    name: \"Credentials\",\n    type: \"credentials\",\n    credentials: {},\n    authorize: () => null,\n    options\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2NyZWRlbnRpYWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHMuanM/ZDBlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IENyZWRlbnRpYWxzO1xuZnVuY3Rpb24gQ3JlZGVudGlhbHMob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGlkOiBcImNyZWRlbnRpYWxzXCIsXG4gICAgbmFtZTogXCJDcmVkZW50aWFsc1wiLFxuICAgIHR5cGU6IFwiY3JlZGVudGlhbHNcIixcbiAgICBjcmVkZW50aWFsczoge30sXG4gICAgYXV0aG9yaXplOiAoKSA9PiBudWxsLFxuICAgIG9wdGlvbnNcbiAgfTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../node_modules/next-auth/providers/credentials.js\n");

/***/ })

});